# Generated by Django 2.0.8 on 2019-01-02 21:11

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0002_dishtype'),
        ('dishes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DishItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('period', models.IntegerField(choices=[(0, 'Breakfast'), (1, 'Lunch'), (2, 'Tea'), (3, 'Dinner')], verbose_name='Period')),
                ('dishes', models.ManyToManyField(blank=True, related_name='dish_items', to='dishes.Dish', verbose_name='Dishes')),
            ],
            options={
                'verbose_name': 'Dish item',
                'verbose_name_plural': 'Set of dishes',
            },
        ),
        migrations.CreateModel(
            name='MenuDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('status', model_utils.fields.StatusField(choices=[('draft', 'draft'), ('published', 'published')], default='draft', max_length=100, no_check_for_status=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Menu day',
                'verbose_name_plural': 'Menu days',
            },
        ),
        migrations.CreateModel(
            name='NumberOfPersons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.IntegerField(blank=True, default=0, verbose_name='Value')),
                ('age_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='numbers_of_persons', to='common.AgeCategory', verbose_name='Age category')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='numbers_of_persons', to='common.Group', verbose_name='Group')),
                ('menu_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numbers_of_persons', to='menu.MenuDay', verbose_name='Menu day')),
            ],
            options={
                'verbose_name': 'Number of persons',
                'verbose_name_plural': 'Numbers of persons',
            },
        ),
        migrations.AddField(
            model_name='dishitem',
            name='menu_day',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dish_items', to='menu.MenuDay', verbose_name='Menu day'),
        ),
    ]
